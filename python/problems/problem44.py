"""Problem 44 - Project Euler

Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
and D = |Pk − Pj| is minimised; what is the value of D?
"""
from itertools import count

from utils.mathex import pentagonal, is_pentagonal


class Problem44(object):
    @staticmethod
    def solve():
        # i had logic to accumulate the minimal difference but after running this
        # up to j=25000 i found no other pairs that were valid; yeah i think i
        # would have to go up to j = 2D/6 to be rigorous but ... meh

        for j in count(1):
            pj = pentagonal(j)
            for k in range(j - 1, 0, -1):
                pk = pentagonal(k)
                if is_pentagonal(pj + pk) and is_pentagonal(pj - pk):
                    return pj - pk

    @staticmethod
    def get_tests():
        return [(None, 5482660)]


if __name__ == '__main__':
    print("The answer is", Problem44.solve())
