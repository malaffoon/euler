"""Problem 2 - Project Euler

   Even Fibonacci numbers

   Each new term in the Fibonacci sequence is generated by adding the previous two terms.
   By starting with 1 and 2, the first 10 terms will be:
      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not exceed four million,
   find the sum of the even-valued terms.
"""
from utils.fibonacci import fibgen


class Problem2(object):
    @staticmethod
    def solve(max_value=4000000):
        """Find the sum of the even-valued Fibonacci numbers"""
        answer = 0
        # NOTE: even though the sequence is defined differently ([1,1,2,3,...] vs. [1,2,3...])
        # i'm not correcting for it because it won't affect the result.
        for n in fibgen(max_value=max_value,max_count=None):
            if n % 2 == 0:
                answer += n
        return answer

    @staticmethod
    def get_tests():
        return [(4000000, 4613732), (100, 44)]


if __name__ == '__main__':
    print("The sum of the even-valued Fibonacci numbers that don't exceed 4000000 is", Problem2().solve(4000000))
